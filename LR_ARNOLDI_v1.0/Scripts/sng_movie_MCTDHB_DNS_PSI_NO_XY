#!/bin/bash
rm -f *gnu*
rm -f *ppm*
rm -f *gif*
rm -f *sort*

# process args
case "$1" in
    clean|-cl*)   
rm -f *gnu*
rm -f *ppm*
rm -f *gif*
rm -f *sort*
  exit 0 ;;
    help|-h*)   
echo "Usage: ../Scripts/sng_movie_MCHB_PSI_NO_scaled 0 15 1 10 "
echo "where: from T=0 till T=15 dT=1 Morb=10"
  exit 0 ;;
    "")   
echo "!!!Usage: ../Scripts/sng_movie_MCHB_PSI_NO_scaled 0 15 1 10 "
echo "where: from T=0 till T=15 dT=1 Morb=10"
exit 0 ;
esac


FILE_LIST="`ls -t *time.dat`"

#echo "Usage: ../Scripts/sng_movie_MCHB_PSI_NO_scaled 0 15 1 10 "
#echo "where from T=0 till T=15 dT=1 Morb=10"

case "$1" in
    [0-9]*)
echo "Plot from:" $1
echo "Plot till:" $2
#LIST="`seq -f %1.1f $1 0.1 $2`"

if [ ! "$3" ]
        then
                echo "Step is not defined - I use default: dt= 0.1"
LIST="`seq -f %1.1f $1 0.1 $2`"
LIST="`seq -f%.6f  $1 $3 $2`"
#                exit
        else
                echo "Step is defined - : dt="$3
LIST="`seq -f %1.1f $1 $3 $2`"
LIST="`seq -f%.6f  $1 $3 $2`"
if [ "$3" == 0.01 ] 
then
LIST="`seq -f %1.2f $1 $3 $2`"
LIST="`seq -f%.6f  $1 $3 $2`"
fi
#          exit
fi





((j=0))
for i in ${LIST} ;
do
((j=j+1))
case "$i" in
    [0-9][0-9][0-9].*)
lvar[j]=${i}time.dat
if [ "$3" == 0.01 ] 
then
lvar[j]=${i}time.dat
fi
esac
case "$i" in
    [0-9][0-9].*)
lvar[j]=${i}0time.dat
if [ "$3" == 0.01 ] 
then
lvar[j]=${i}0time.dat
fi
esac
case "$i" in
    [0-9].*)
lvar[j]=${i}00time.dat
if [ "$3" == 0.01 ] 
then
lvar[j]=${i}00time.dat
fi
esac
#printf "     %s\n" "${lvar[j]}" "$jj"
done
FILE_LIST1=${lvar[@]}
#echo "Full: " ${lvar[@]}
FILE_LIST="`ls -t ${FILE_LIST1}`"
#fi
esac


echo FILE_LIST: ${FILE_LIST}
flname=${FILE_LIST[@]:0:18}
#flname=echo $flname

col=1
minX=$(awk -v col=$col -v flname=$flname 'NR>2 && min=="" || $col < min {min=$col; minline=$0}; END{ print min}' $flname;)
maxX=$(awk -v col=$col -v flname=$flname 'NR>2 && max=="" ||$col > max {max=$col; minline=$0}; END{ print max}' $flname;)
minX=-4
maxX=+4
minY=-4
maxY=+4
minZ=-0.01
maxZ=+4.3
#echo "   hjkhjkh" ${FILE_LIST[@]:0:18}
#flname=$($FILE_LIST  | awk '{for (i = 1; i <= 2; i++) {print $i}}')
#flname=${FILE_LIST[@]:0:18}
echo "minX: "$minX" maxX: "$maxX
#exit
#################################################################
for i in ${FILE_LIST} ; 
do
echo "file: ",$i
#echo "set terminal pbm small color;"> $i.gnu
echo "set terminal jpeg medium size 800,600;"> $i.gnu
echo "set size 1.0,1.0;" >> $i.gnu
echo "set mxtics 10;" >> $i.gnu
echo "set grid;" >> $i.gnu
#echo "set output\"$i.ppm\";" >> $i.gnu
echo "set output\"$i.jpg\";" >> $i.gnu
echo "set title \"File: $i \" ;">> $i.gnu
Morb=$4
echo "set xlabel \"X\" offset 0, 0, -3 " >> $i.gnu
echo "set ylabel \"Y\"  offset 8, -1, 0   " >> $i.gnu
echo "set zlabel \"Density \" offset 20,15, 0   " >> $i.gnu

echo "set view 60,10" >> $i.gnu
echo "set view 120,30,1.1,1.2" >> $i.gnu
# uncomment to see Re -Im plane only
#echo "set view 90,0,1,1" >> $i.gnu 

echo "set xrange [$minX:$maxX]">> $i.gnu
echo "set xyplane -0.5 ">> $i.gnu
echo "set xyplane at 0 ">> $i.gnu

#echo "set contour">> $i.gnu
echo "set cntrparam levels auto 15">> $i.gnu
#echo "set pm3d">> $i.gnu
echo " splot [$minX:$maxX][$minY:$maxY][$minZ:$maxZ] \
\"$i\" using (\$1):(\$2):(0.3*\$5+2.1) t \"Trap \" w lp lt -1 lw 1 pt 6 ps 0.2 ,\\" >>$i.gnu
ii=1;
x1=0.0000;
while [ $ii -le $Morb ] 
do
i1=$[2*$Morb+10+2*($ii-1)];
i0=$[$i1+1];
i2=$[$Morb-$ii+1];
x1=$[$i2 / $Morb];
x1=$(echo "1-$ii/($Morb+1)" | bc -l);
x1=$(echo "($Morb-$ii+1)*1.5" | bc -l);
ni=$[4*$Morb+10+$ii-1];
echo "\"$i\" using (\$1):(\$2):("$x1"+((\$"$i1"*\$"$i1"+\$"$i0"*\$"$i0"))/(\$4*\$4)) t \"NO n("$i2")|PSI_"$i2"|^2\" w lp lt "$i2" pt 6 ps 0.1 ,\\">>$i.gnu
ii=$[$ii+1]
done 
echo "\"$i\" using (\$1):(\$2):(\$8) t \"DNS MCTDHB("$Morb")\" w lp lt 1 lw 1 pt 6 ps 0.2;" >>$i.gnu

gnuplot_new $i.gnu
done

ls -t *time.dat.jpg > qq.sort
sort -n qq.sort > qq1.sort
FILE_LIST1="`cat qq1.sort`"
echo FILE_LIST1: ${FILE_LIST1}

mencoder mf://@qq1.sort -mf w=800:h=600:fps=5:type=jpg -ovc lavc -lavcopts vcodec=msmpeg4v2 -oac copy -o DNS_PSI_NO_$1_$2_XY.mpg
echo "Created Movie File is named: DNS_PSI_NO_$1_$2_XY.mpg"

rm -f *gnu*
rm -f *ppm*
rm -f *jpg*
rm -f *jpeg*
rm -f *gif*
rm -f *sort*
  exit 0 
