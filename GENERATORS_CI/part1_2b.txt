        call cpu_time(start)
c==========================================================================================================================
              IPRC=MYID+1
c==========================================================================================================================
              FromN=CI_Proc_From(IPRC)
              TillN=CI_Proc_Till(IPRC)
c==========================================================================================================================
c        call cpu_time(start)
c======= MEMORY Allocation For Vout =====================================
        TID = OMP_GET_MAX_THREADS()
        ALLOCATE( VOUT(SIZE(VIN),TID) )
        IF(ALLOCATED(VOUT).eqv..FALSE.)
     . write(6,*)" MEM for VOUT is NOT ok!",SIZE(VOUT)
         VOUT=ZERO
         RIJKL=ZERO
c=====================================================================
c======================== Here all the required arrays and constants are READY
c=============================================
c=============== DO LOOP over the desired TRM_REQ
c============== Nterms is the number of the required terms
           L=0
!$OMP PARALLEL  DEFAULT(PRIVATE)
!$OMP& shared(VIN,VOUT,RIJKL,FromN,TillN,TERM_INDEX_2B,
!$OMP& TERM_REQ_2B,MCNK,RESCALE_2B,WIJKL,TID,
!$OMP& Ind_CI_2b,Prefactors_2b,CI_Prd,Npar,Morb)
        this_thread= OMP_GET_THREAD_NUM()+1
!$OMP DO  REDUCTION(+:RIJKL)
       Iloop: DO I=FromN,TillN
            I_current_term= TERM_REQ_2B(I)
        RIJKL(I_current_term)=ZERO
            P=TERM_INDEX_2B(I_current_term)
c================ Unpack cI cJ cK cL from P
        zrho=ZERO
        zrhocnjg=ZERO
c        ZRIJKL(I_current_term)=ZERO
        cL= INT(P/1000000)
        cK= INT((P-cL*1000000)/10000)
        cJ= INT((P-cL*1000000-cK*10000)/100)
        cI= P-cL*1000000-cK*10000-cJ*100
c==================== Formation of the Annihilation and Creation patterns which are shifts: Sh_m(minus) Sh_p(plus)
c============== From
             Sh_m=0
            Sh_m(cL)=Sh_m(cL)+1
            Sh_m(cK)=Sh_m(cK)+1
c============== To
            Sh_p=0
            Sh_p(cI)=Sh_p(cI)+1
            Sh_p(cJ)=Sh_p(cJ)+1

